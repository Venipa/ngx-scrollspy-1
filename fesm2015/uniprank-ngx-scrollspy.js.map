{"version":3,"file":"uniprank-ngx-scrollspy.js","sources":["../../../library/ngx-scrollspy/src/lib/scroll-direction.enum.ts","../../../library/ngx-scrollspy/src/lib/scroll-spy.service.ts","../../../library/ngx-scrollspy/src/lib/scroll-spy.directive.ts","../../../library/ngx-scrollspy/src/lib/scroll-element.directive.ts","../../../library/ngx-scrollspy/src/lib/scroll-item.directive.ts","../../../library/ngx-scrollspy/src/lib/ngx-scrollspy.module.ts","../../../library/ngx-scrollspy/src/public-api.ts","../../../library/ngx-scrollspy/src/uniprank-ngx-scrollspy.ts"],"sourcesContent":["export enum ScrollDirectionEnum {\n    vertical = 'vertical',\n    horizontal = 'horizontal'\n}\n","import { Injectable, ElementRef, Inject, InjectionToken, Optional } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { BehaviorSubject, Observable, Subject, fromEvent } from 'rxjs';\nimport { auditTime, takeUntil } from 'rxjs/operators';\n\nimport { ScrollObjectInterface } from './scroll-object.interface';\nimport { ScrollElementInterface } from './scroll-element.interface';\nimport { ScrollDirectionEnum } from './scroll-direction.enum';\n\nconst defaultElementId = 'window';\n\nexport const SPY_CONFIG = new InjectionToken<SpyConfig>(null);\n\nexport interface SpyConfig {\n  /**\n   * @param boolean lookAhead\n   * Set the first scroll item active even when the scroll element has not yet been reached\n   */\n  lookAhead?: boolean;\n  /**\n   * @param boolean activateOnlySetItems\n   * Set the the scroll items active only when the scroll element reached the set offset and is still in the viewport\n   */\n  activateOnlySetItems?: boolean;\n  /**\n   * @param boolean activateOnlySetItems\n   * Set the the scroll items active only when the scroll element reached the set offset and is still in the viewport\n   */\n  attributeType?: 'id' | 'data-id';\n}\n\n@Injectable()\nexport class ScrollSpyService {\n  private _scrollItems: { [itemId: string]: ScrollObjectInterface } = {};\n  private _scrollElements: { [scrollElementId: string]: ScrollElementInterface } = {};\n  private _$scrollElementListener: { [scrollElementId: string]: BehaviorSubject<ScrollObjectInterface> } = {};\n\n  private _scrollElementListener: { [scrollElementId: string]: ScrollObjectInterface } = {};\n\n  private _onStopListening = new Subject();\n  private _resizeEvents = fromEvent(window, 'resize').pipe(auditTime(300), takeUntil(this._onStopListening));\n  private _scrollEvents = fromEvent(window, 'scroll').pipe(auditTime(10), takeUntil(this._onStopListening));\n\n  private _lookAhead: boolean;\n  private _activateOnlySetItems: boolean;\n\n  readonly attributeType: 'id' | 'data-id';\n\n  constructor(@Inject(DOCUMENT) private doc: any, @Inject(SPY_CONFIG) @Optional() config?: SpyConfig) {\n    this._initScrollElementListener(\n      defaultElementId,\n      this._generateScrollElement(defaultElementId, new ElementRef(doc.documentElement || doc.body), ScrollDirectionEnum.vertical)\n    );\n\n    this._resizeEvents.subscribe(() => this._windowScroll());\n    this._scrollEvents.subscribe(() => this._windowScroll());\n    this._windowScroll();\n    if (config !== null) {\n      this._lookAhead = config.lookAhead;\n      this._activateOnlySetItems = config.activateOnlySetItems;\n      this.attributeType = config.attributeType;\n    } else {\n      this._lookAhead = false;\n      this._activateOnlySetItems = false;\n      this.attributeType = 'id';\n    }\n  }\n\n  private _initScrollElementListener(scrollElementId: string, scrollElement: ScrollElementInterface): void {\n    this._scrollElements[scrollElementId] = scrollElement;\n    this._scrollElementListener[scrollElementId] = null;\n    this._$scrollElementListener[scrollElementId] = new BehaviorSubject(null);\n  }\n\n  private _windowScroll() {\n    this.updateScrollElement(defaultElementId);\n  }\n\n  private _generateScrollElement(\n    scrollElementId: string,\n    elementRef: ElementRef,\n    direction: ScrollDirectionEnum,\n    offset: number = 0\n  ): ScrollElementInterface {\n    return {\n      id: scrollElementId,\n      elementRef,\n      direction,\n      offset\n    };\n  }\n\n  public setOffset(scrollElementId: string, offset: number): void {\n    this._checkScrollElementExists(scrollElementId);\n    this._scrollElements[scrollElementId].offset = offset;\n  }\n\n  public setScrollElement(scrollElementId: string, elementRef: ElementRef, direction: ScrollDirectionEnum, offset: number = 0): void {\n    this._checkScrollElementNotExists(scrollElementId);\n    this._initScrollElementListener(scrollElementId, this._generateScrollElement(scrollElementId, elementRef, direction, offset));\n  }\n\n  private _checkScrollElementNotExists(scrollElementId: string): void {\n    if (this._scrollElements[scrollElementId] != null) {\n      throw new Error(`ScrollSpyService: The scroll element with the id [${scrollElementId}] exists.`);\n    }\n  }\n  public checkScrollElementExists(scrollElementId: string): boolean {\n    return this._scrollElements[scrollElementId] != null;\n  }\n\n  public setItem(itemId: string, elementRef: ElementRef, scrollElementId = defaultElementId): void {\n    this._checkItemNotExists(itemId);\n    this._scrollItems[itemId] = this._generateScrollObject(itemId, elementRef, scrollElementId);\n    this._setDefaultItem(itemId, scrollElementId);\n  }\n\n  private _checkItemNotExists(itemId: string): void {\n    if (this._scrollItems[itemId] != null) {\n      throw new Error(`ScrollSpyService: The scroll item with the id [${itemId}] exists.`);\n    }\n  }\n\n  private _generateScrollObject(id: string, elementRef: ElementRef, scrollElementId: string): ScrollObjectInterface {\n    return {\n      id,\n      scrollElementId,\n      elementRef,\n      nativeElement: elementRef.nativeElement\n    };\n  }\n\n  private _setDefaultItem(itemId: string, scrollElementId: string): void {\n    if (this._lookAhead) {\n      return;\n    }\n    const _value = this._scrollElementListener[scrollElementId];\n    if (_value == null) {\n      this._setScrollElementListener(scrollElementId, this._scrollItems[itemId]);\n    }\n  }\n\n  private _setScrollElementListener(scrollElementId: string, scrollObject: ScrollObjectInterface): void {\n    this._scrollElementListener[scrollElementId] = scrollObject;\n    setTimeout(() => this._$scrollElementListener[scrollElementId].next(scrollObject));\n  }\n\n  public changeScrollElement(itemId: string, oldElementId: string, newElementId: string, override = false) {\n    this._checkScrollElementExists(oldElementId);\n    this._checkScrollElementExists(newElementId);\n    this._checkItemExists(itemId);\n\n    const _scrollItem = this._scrollItems[itemId];\n    if ((_scrollItem.scrollElementId !== defaultElementId && override) || _scrollItem.scrollElementId === defaultElementId) {\n      this._scrollItems[itemId].scrollElementId = newElementId;\n    }\n\n    this._setDefaultItem(itemId, newElementId);\n\n    const _oldElements = this._getElementItems(oldElementId);\n    if (_oldElements.length > 0) {\n      this._setDefaultItem(_oldElements[0].id, oldElementId);\n    }\n  }\n\n  private _getElementItems(scrollElementId: string): Array<ScrollObjectInterface> {\n    const _items = [];\n    for (const key in this._scrollItems) {\n      if (this._scrollItems.hasOwnProperty(key)) {\n        const value = this._scrollItems[key];\n        if (value.scrollElementId === scrollElementId) {\n          _items.push(value);\n        }\n      }\n    }\n    return _items;\n  }\n\n  private _checkItemExists(itemId: string): void {\n    if (this._scrollItems[itemId] == null) {\n      throw new Error(`ScrollSpyService: The scroll item with the id [${itemId}] doesn't exist.`);\n    }\n  }\n\n  public observe(scrollElementId: string = defaultElementId): Observable<ScrollObjectInterface> {\n    this._checkScrollElementExists(scrollElementId);\n    return this._$scrollElementListener[scrollElementId].asObservable();\n  }\n\n  private _checkScrollElementExists(scrollElementId: string): void {\n    if (this._scrollElements[scrollElementId] == null) {\n      throw new Error(`ScrollSpyService: The scroll element with the id [${scrollElementId}] doesn't exist.`);\n    }\n  }\n\n  public updateScrollElement(scrollElementId: string): void {\n    this._checkScrollElementExists(scrollElementId);\n\n    const _element = this._scrollElements[scrollElementId];\n    const _elementItems = this._getElementItems(scrollElementId);\n\n    const _nextActiveItem = this._getActiveItem(_element, _elementItems);\n    const _currentActiveItem = this._scrollElementListener[scrollElementId];\n\n    if (_currentActiveItem == null) {\n      if (_nextActiveItem != null) {\n        this._setScrollElementListener(scrollElementId, _nextActiveItem);\n      }\n    } else if (_nextActiveItem != null) {\n      if (_currentActiveItem.id !== _nextActiveItem.id) {\n        this._setScrollElementListener(scrollElementId, _nextActiveItem);\n      }\n    } else if (_nextActiveItem == null && this._lookAhead) {\n      this._setScrollElementListener(scrollElementId, null);\n    }\n  }\n\n  private _getActiveItem(scrollElement: ScrollElementInterface, listOfElements: Array<ScrollObjectInterface>): ScrollObjectInterface {\n    const _direction = scrollElement.direction;\n    let _scrollObject = null;\n\n    const nativeElement = scrollElement.elementRef.nativeElement;\n    listOfElements.forEach((_element) => {\n      let _active = false;\n      switch (_direction) {\n        case ScrollDirectionEnum.horizontal:\n          const _scrollLeft = scrollElement.id.toLowerCase() === 'window' ? (window && window.pageXOffset) || 0 : nativeElement.scrollLeft;\n          _active = _element.nativeElement.offsetLeft <= _scrollLeft + scrollElement.offset;\n          break;\n\n        default: {\n          const _scrollTop = scrollElement.id.toLowerCase() === 'window' ? (window && window.pageYOffset) || 0 : nativeElement.scrollTop;\n          if (this._activateOnlySetItems) {\n            _active =\n              _element.nativeElement.offsetTop < _scrollTop + scrollElement.offset &&\n              _element.nativeElement.offsetTop + _element.nativeElement.offsetHeight > _scrollTop + scrollElement.offset;\n          } else {\n            _active = _element.nativeElement.offsetTop <= _scrollTop + scrollElement.offset;\n          }\n        }\n      }\n      if (_active) {\n        _scrollObject = _element;\n      }\n    });\n    return _scrollObject;\n  }\n\n  public deleteScrollElement(scrollElementId: string): void {\n    if (scrollElementId === 'window') {\n      this._setScrollElementListener(scrollElementId, null);\n    } else {\n      this._checkScrollElementExists(scrollElementId);\n      delete this._scrollElements[scrollElementId];\n      delete this._$scrollElementListener[scrollElementId];\n      delete this._scrollElementListener[scrollElementId];\n    }\n  }\n\n  public deleteItem(itemId: string): void {\n    if (this._scrollItems[itemId] != null) {\n      delete this._scrollItems[itemId];\n    }\n  }\n}\n","import { Directive, AfterViewInit, Input, ElementRef, HostBinding, OnDestroy, ChangeDetectorRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ScrollSpyService } from './scroll-spy.service';\n\n@Directive({\n  selector: '[uniScrollSpy]'\n})\nexport class ScrollSpyDirective implements AfterViewInit, OnDestroy {\n  @HostBinding('class.active') classActive = false;\n\n  @Input('uniScrollSpy') itemId: string;\n  @Input() scrollElement = 'window';\n\n  private _subscriber: Subscription;\n\n  constructor(private _el: ElementRef, private _scrollSpyService: ScrollSpyService, private _cdr: ChangeDetectorRef) {}\n\n  ngOnDestroy(): void {\n    if (this._subscriber) {\n      this._subscriber.unsubscribe();\n    }\n    this._scrollSpyService.deleteItem(this.itemId);\n  }\n\n  ngAfterViewInit(): void {\n    this._subscriber = this._scrollSpyService.observe(this.scrollElement).subscribe((element) => {\n      if (element != null) {\n        const _active = element.id === this.itemId;\n        setTimeout(() => {\n          this.classActive = _active;\n          this._cdr.markForCheck();\n        });\n      }\n    });\n    this._scrollSpyService.setItem(this.itemId, this._el, this.scrollElement);\n\n    let _keyType = 'id';\n    if (this._scrollSpyService.attributeType === 'data-id') {\n      _keyType = 'data-id';\n    }\n    this._el.nativeElement.setAttribute(_keyType, this.itemId);\n  }\n}\n","import { Directive, HostListener, ElementRef, Input, OnInit, OnDestroy, ContentChildren, QueryList, AfterViewInit } from '@angular/core';\n\nimport { ScrollDirectionEnum } from './scroll-direction.enum';\nimport { ScrollSpyService } from './scroll-spy.service';\nimport { ScrollSpyDirective } from './scroll-spy.directive';\nimport { Subject } from 'rxjs';\nimport { debounceTime, takeUntil } from 'rxjs/operators';\n\n@Directive({\n  selector: '[uniScrollElement]'\n})\nexport class ScrollElementDirective implements OnInit, AfterViewInit, OnDestroy {\n  private _destroy$ = new Subject<void>();\n  @Input('uniScrollElement') elementId: string;\n  @Input() direction: ScrollDirectionEnum = ScrollDirectionEnum.vertical;\n  @Input() destroyElementsSubscription: boolean = true;\n\n  @ContentChildren(ScrollSpyDirective, { descendants: true })\n  private _scrollSpyElements: QueryList<ScrollSpyDirective>;\n\n  @HostListener('scroll', ['$event'])\n  onScroll($event) {\n    this._scrollSpyService.updateScrollElement(this.elementId);\n  }\n\n  constructor(private _el: ElementRef, private _scrollSpyService: ScrollSpyService) {}\n\n  ngOnInit(): void {\n    if (this.destroyElementsSubscription || !this._scrollSpyService.checkScrollElementExists(this.elementId)) this._scrollSpyService.setScrollElement(this.elementId, this._el, this.direction);\n    if (this._scrollSpyService.attributeType === 'id') {\n      this._el.nativeElement.setAttribute('id', this.elementId);\n    } else {\n      this._el.nativeElement.setAttribute('data-id', this.elementId);\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this._scrollSpyElements.changes.pipe(debounceTime(10), takeUntil(this._destroy$)).subscribe((elements: ScrollSpyDirective[]) => {\n      if (elements.length > 0) elements.forEach((element) => {\n        this._scrollSpyService.changeScrollElement(element.itemId, element.scrollElement, this.elementId, true);\n      });\n    });\n  }\n\n  ngOnDestroy(): void {\n    if(this.destroyElementsSubscription) this._scrollSpyService.deleteScrollElement(this.elementId);\n    this._destroy$.next();\n  }\n}\n","import { Directive, Input, Output, EventEmitter, OnDestroy, HostBinding, AfterViewInit, ChangeDetectorRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ScrollSpyService } from './scroll-spy.service';\n\n@Directive({\n    selector: '[uniScrollItem]'\n})\nexport class ScrollItemDirective implements OnDestroy, AfterViewInit {\n    @HostBinding('class.active') classActive = false;\n\n    @Input('uniScrollItem') itemId: string;\n    @Input() scrollElement = 'window';\n\n    @Output() activeEvent: EventEmitter<boolean> = new EventEmitter();\n\n    private _subscriber: Subscription;\n\n    constructor(private _scrollSpyService: ScrollSpyService, private _cdr: ChangeDetectorRef) {}\n\n    ngOnDestroy(): void {\n        if (this._subscriber) {\n            this._subscriber.unsubscribe();\n        }\n    }\n\n    ngAfterViewInit(): void {\n        this._subscriber = this._scrollSpyService.observe(this.scrollElement).subscribe((element) => {\n            let _active;\n            if (element != null) {\n                _active = element.id === this.itemId;\n                this.activeEvent.emit(_active);\n            } else {\n                _active = false;\n            }\n\n            setTimeout(() => {\n                this.classActive = _active;\n                this._cdr.markForCheck();\n            });\n        });\n    }\n}\n","import { NgModule, Provider, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\n\nimport { ScrollSpyDirective } from './scroll-spy.directive';\nimport { ScrollItemDirective } from './scroll-item.directive';\nimport { ScrollElementDirective } from './scroll-element.directive';\n\nimport { SPY_CONFIG, SpyConfig, ScrollSpyService } from './scroll-spy.service';\nimport { CommonModule } from '@angular/common';\n\nconst directives: any[] = [ScrollSpyDirective, ScrollItemDirective, ScrollElementDirective];\nconst components: any[] = [];\nconst providers: Provider[] = [ScrollSpyService];\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [...directives, ...components],\n    exports: [...directives, ...components]\n})\nexport class NgxScrollspyModule {\n    public static forRoot(parameters: SpyConfig = { lookAhead: false }): ModuleWithProviders<NgxScrollspyModule> {\n        return {\n            ngModule: NgxScrollspyModule,\n            providers: [...providers, { provide: SPY_CONFIG, useValue: parameters }]\n        };\n    }\n}\n","/*\n * Public API Surface of ngx-scrollspy\n */\n// enums\nexport { ScrollDirectionEnum } from './lib/scroll-direction.enum';\n\n// interfaces\nexport { ScrollObjectInterface } from './lib/scroll-object.interface';\nexport { ScrollElementInterface } from './lib/scroll-element.interface';\n\n// services\nexport { ScrollSpyService } from './lib/scroll-spy.service';\n\n// directives\nexport { ScrollElementDirective } from './lib/scroll-element.directive';\nexport { ScrollItemDirective } from './lib/scroll-item.directive';\nexport { ScrollSpyDirective } from './lib/scroll-spy.directive';\n\n// modules\nexport { NgxScrollspyModule } from './lib/ngx-scrollspy.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {SPY_CONFIG as ɵa} from './lib/scroll-spy.service';"],"names":[],"mappings":"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"}